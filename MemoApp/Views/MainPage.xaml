<Page
	x:Class="MemoApp.Views.MainPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:data="using:MemoApp.ViewModels"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	Margin="5,10,5,10"
	Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
	Loaded="{x:Bind ViewModel.Page_Loaded}"
	mc:Ignorable="d">

	<StackPanel HorizontalAlignment="Center" Orientation="Vertical">
		<StackPanel
			x:Name="MenuHeader"
			HorizontalAlignment="Right"
			Orientation="Horizontal">
			<ToggleButton
				VerticalAlignment="Stretch"
				Background="DarkGray"
				Click="{x:Bind MoveMainPage}"
				Content="{x:Bind Common.MainPageButtonLabel}" />
			<ToggleButton
				VerticalAlignment="Stretch"
				Click="{x:Bind MoveRegisterTaskPage}"
				Content="{x:Bind Common.RegisterPageButtonLabel}" />
			<ToggleButton
				VerticalAlignment="Stretch"
				Click="{x:Bind MoveLogPage}"
				Content="{x:Bind Common.LogPageButtonLabel}" />
			<ToggleButton
				VerticalAlignment="Stretch"
				Click="{x:Bind MoveMemoSearchPage}"
				Content="{x:Bind Common.MemoSearchPageButtonLabel}" />
			<ToggleButton
				VerticalAlignment="Stretch"
				Click="{x:Bind MoveHowToPage}"
				Content="{x:Bind Common.HowToPageButtonLabel}" />
			<ToggleButton
				VerticalAlignment="Stretch"
				Click="{x:Bind MoveConfigPage}"
				Content="{x:Bind Common.ConfigPageButtonLabel}" />
		</StackPanel>
		<StackPanel>
			<CalendarDatePicker
				Margin="0,3,0,10"
				Date="{x:Bind ViewModel.MainDate, Mode=TwoWay}"
				DateFormat="{}{dayofweek.full}‎, ‎{month.full}‎ ‎{day.integer}‎, ‎{year.full}"
				IsTodayHighlighted="True" />

			<ComboBox
				x:Name="TaskList"
				Width="470"
				Margin="5,5,5,5"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Top"
				DisplayMemberPath="Content"
				Header="{x:Bind ViewModel.TaskChoiceLabel, Mode=OneWay}"
				ItemsSource="{x:Bind ViewModel.TaskListData, Mode=OneWay}"
				PlaceholderText="{x:Bind ViewModel.TaskChoicePlaceholder}"
				SelectedItem="{x:Bind ViewModel.SelectedEachTaskItem, Mode=TwoWay}"
				SelectedValue="{x:Bind ViewModel.SelectedEachTaskId, Mode=TwoWay}"
				SelectedValuePath="EachTaskId" />

			<StackPanel Width="450" Margin="0,5,0,5">
				<ScrollViewer>
					<ListView Height="100" ItemsSource="{x:Bind ViewModel.SmallTaskListData, Mode=TwoWay}">
						<ListView.ItemTemplate>
							<DataTemplate x:Name="SmallTaskList" x:DataType="data:SmallTaskInfo">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="20" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="30" />
									</Grid.RowDefinitions>
									<CheckBox
										x:Name="SmallTaskCompleteFlag"
										Grid.Row="0"
										Grid.Column="0"
										Click="{x:Bind ChangeSmallTaskCompleteFlag}"
										IsChecked="{x:Bind IsComplete}" />
									<TextBlock Grid.Column="1" Text="{x:Bind Content}" />
								</Grid>
							</DataTemplate>
						</ListView.ItemTemplate>
					</ListView>
				</ScrollViewer>
			</StackPanel>

			<Grid
				Margin="5,5,5,5"
				Padding="5"
				ColumnSpacing="5">

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<Border
					Grid.Column="0"
					BorderBrush="Black"
					BorderThickness="1">
					<Button
						Height="30"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Click="{x:Bind ViewModel.TaskStart}"
						Content="{x:Bind ViewModel.StartLabel}"
						FontSize="11"
						IsEnabled="{x:Bind ViewModel.IsButtonEnabled, Mode=OneWay}" />
				</Border>
				<Border
					Grid.Column="1"
					BorderBrush="Black"
					BorderThickness="1">
					<Button
						Height="30"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Click="{x:Bind ViewModel.TaskPause}"
						Content="{x:Bind ViewModel.PauseLabel}"
						FontSize="11"
						IsEnabled="{x:Bind ViewModel.IsButtonEnabled, Mode=OneWay}" />
				</Border>
				<Border
					Grid.Column="2"
					BorderBrush="Black"
					BorderThickness="1">
					<Button
						Height="30"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Click="{x:Bind ViewModel.TaskStop}"
						Content="{x:Bind ViewModel.FinishLabel}"
						FontSize="11"
						IsEnabled="{x:Bind ViewModel.IsButtonEnabled, Mode=OneWay}" />
				</Border>
			</Grid>

			<TextBox
				Width="450"
				Height="200"
				Margin="0,5,0,5"
				AcceptsReturn="True"
				Header="{x:Bind ViewModel.MemoLabel}"
				PlaceholderText="{x:Bind ViewModel.MemoPlaceholder}"
				Text="{x:Bind ViewModel.MemoContent, Mode=TwoWay}"
				TextWrapping="Wrap" />

			<StackPanel
				Height="40"
				HorizontalAlignment="Right"
				VerticalAlignment="Stretch"
				Orientation="Horizontal">
				<Button
					Margin="0,5,5,5"
					HorizontalAlignment="Right"
					VerticalAlignment="Stretch"
					Click="{x:Bind ViewModel.MemoRegister}"
					Content="{x:Bind ViewModel.RegisterButtonLabel}"
					FontSize="12" />
			</StackPanel>
		</StackPanel>
	</StackPanel>
</Page>
